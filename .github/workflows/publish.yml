name: publish

on:
  push:
    tags:
      - "*"

env:
  PROJECT_NAME: "ASFTradeExtension"
  REPO_NAME: "ASFTradeExtension"
  PLUGIN_NAME: "ASFTradeExtension.dll"
  DOTNET_SDK_VERSION: 9.0

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7
        with:
          submodules: recursive

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4.0.1
        with:
          dotnet-version: ${{ env.DOTNET_SDK_VERSION }}

      - name: Verify .NET Core
        run: dotnet --info

      - name: Restore packages in preparation for ${{ env.PROJECT_NAME }} publishing
        run: dotnet restore ${{ env.PROJECT_NAME }} -p:ContinuousIntegrationBuild=true --nologo

      - name: Publish ${{ env.PROJECT_NAME }}
        run: dotnet publish ${{ env.PROJECT_NAME }} -o:"./publish/" -c:Release

      - name: Collect files
        shell: pwsh
        run: |
          if (-Not (Test-Path -Path ./tmp)) {
              New-Item -ItemType Directory -Path ./tmp
          }
          else {
              Remove-Item -Path ./tmp/* -Recurse -Force
          }

          Copy-Item -Path .\publish\${{ env.PLUGIN_NAME }} -Destination .\tmp\ 

          $dirs = Get-ChildItem -Path ./publish -Directory
          foreach ($dir in $dirs) {
              $subFiles = Get-ChildItem -Path $dir.FullName -File -Filter *.resources.dll
              
              foreach ($file in $subFiles) {
                  $resourceName = [System.IO.Path]::GetFileNameWithoutExtension($file.Name)
                  $opDir = "./tmp/$resourceName"
                  if (-Not (Test-Path -Path $opDir)) {
                      New-Item -ItemType Directory -Path $opDir
                  }

                  $destinationPath = ".\tmp\$resourceName\$($dir.Name).dll"
                  Copy-Item -Path $file -Destination $destinationPath

                  Write-Output "Copy resource DLL $($file.FullName) -> $destinationPath"
              }
          }

      - name: Zip files
        run: 7z a -bd -slp -tzip -mm=Deflate -mx=5 -mfb=150 -mpass=10 "./dist/${{ env.REPO_NAME }}.zip" "./tmp/*"

      - name: Upload ${{ env.PROJECT_NAME }}
        continue-on-error: true
        uses: actions/upload-artifact@v4.3.6
        with:
          if-no-files-found: error
          name: ${{ env.PROJECT_NAME }}.zip
          path: ./dist/${{ env.PROJECT_NAME }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0

      - name: Download ${{ env.PROJECT_NAME }} artifact from windows-latest
        uses: actions/download-artifact@v4.1.8
        with:
          name: ${{ env.PROJECT_NAME }}.zip
          path: out

      - name: Create ${{ env.PROJECT_NAME }} GitHub release
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: "out/*"
          makeLatest: false
          prerelease: true
          tag: ${{ github.ref_name }}
          name: ${{ env.PROJECT_NAME }} ${{ github.ref_name }}
          body: |
            ![Release](https://img.shields.io/badge/${{ env.REPO_NAME }}-${{ github.ref_name }}-brightgreen) ![Downloads](https://img.shields.io/github/downloads/chr233/${{ env.REPO_NAME }}/${{ github.ref_name }}/total?label=Downloads)

            ---

            release created bt github actions
